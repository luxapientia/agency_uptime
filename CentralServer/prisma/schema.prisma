// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  firstName     String
  lastName      String
  email         String         @unique
  password      String
  companyName   String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  sites         Site[]
  statuses      SiteStatus[]
  themeSettings ThemeSettings?
  customDomain  String?

  @@map("users")
}

model Site {
  id            String         @id @default(uuid())
  name          String
  url           String
  checkInterval Int            @default(5)
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  userId        String
  user          User           @relation(fields: [userId], references: [id])
  statuses      SiteStatus[]
  notifications  Notification[]

  @@index([userId])
  @@map("sites")
}

enum NotificationType {
  EMAIL
  SLACK
  TELEGRAM
  DISCORD
  PUSH_NOTIFICATION
  WEB_HOOK
}

model Notification {
  id          String           @id @default(uuid())
  siteId      String
  site        Site             @relation(fields: [siteId], references: [id])
  enabled     Boolean          @default(false)
  type        NotificationType
  contactInfo String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@map("notifications")
}

model SiteStatus {
  id        String   @id @default(uuid())
  siteId    String
  userId    String
  isUp      Boolean
  pingIsUp  Boolean
  httpIsUp  Boolean
  checkedAt DateTime @default(now())

  // SSL Information
  hasSsl             Boolean   @default(false)
  sslValidFrom       DateTime?
  sslValidTo         DateTime?
  sslIssuer          String?
  sslDaysUntilExpiry Int?

  // Relations
  site Site @relation(fields: [siteId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([siteId])
  @@index([userId])
  @@index([checkedAt])
  @@map("site_statuses")
}

model ThemeSettings {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  
  // Theme Colors
  primaryColor   String   @default("#1976d2")
  secondaryColor String   @default("#9c27b0")
  errorColor     String   @default("#d32f2f")
  warningColor   String   @default("#ed6c02")
  infoColor      String   @default("#0288d1")
  successColor   String   @default("#2e7d32")
  textPrimary    String   @default("#000000")
  textSecondary  String   @default("#666666")
  
  // Other Theme Settings
  isDarkMode     Boolean  @default(false)
  borderRadius   Int      @default(4)
  fontPrimary    String   @default("Roboto")
  fontSecondary  String   @default("Roboto")
  favicon        String   @default("favicon.png")
  logo           String   @default("logo.png")
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
  @@map("theme_settings")
}
